@page "/zaps/{FileId:guid}"

@using MedicalExaminationPreliminaryLists.Share.DTOs
@using Microsoft.AspNetCore.Authorization;

@attribute [Authorize]
@attribute [StreamRendering]

@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient httpClient


<PageTitle>Записи</PageTitle>

<h1>Записи</h1>

@if (!zaps.Any())
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="fold-table">
        <thead>
            <tr>
                <th>Порядковый номер</th>
                <th>Год</th>
                <th>Фамилия</th>
                <th>Имя</th>
                <th>Отчество</th>
                <th>Дата рождения</th>
                <th>Номер телефона</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var zap in zaps)
            {
                <tr class="view">
                    <td>@zap.ZAPNumber</td>
                    <td>@zap.Year</td>
                    <td>@zap.Surname</td>
                    <td>@zap.Name1</td>
                    <td>@zap.Name2</td>
                    <td>@zap.Birthday</td>
                    <td>@zap.TelephoneNumber</td>
                    @if (userRole == "Admin")
                    {
                        <td>
                            <a href="/zap/change/@zap.Id">Изменить</a>
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" @onclick="@(async ()=> await DeleteZap(zap.Id))">Удалить</button>
                        </td>
                    }
                    else
                    {
                        <td></td>
                        <td></td>
                    }
                </tr>

                <tr class="fold">
                    <td colspan="8">
                        <div class="fold-content">
                            <table>
                                <thead>
                                    <tr>
                                        <th>Номер</th>
                                        <th>Id профиля медицинской помощи</th>
                                        <th>Код лечебно-профилактического учреждения</th>
                                        <th>Код МКБ</th>
                                        <th>Дата начала</th>
                                        <th>Дата конца</th>
                                        <th>Причина прекращения</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var dn in zap.Dispenses)
                                    {
                                        <tr>
                                            <td>@dn.Number</td>
                                            <td>@dn.MedProfileId</td>
                                            <td>@dn.LpuType</td>
                                            <td>@dn.DiagnosisId</td>
                                            <td>@dn.BeginDate</td>
                                            <td>@dn.EndDate</td>
                                            <td>@dn.EndReason</td>
                                            @if (userRole == "Admin")
                                            {
                                                <td>
                                                    <a href="/dn/change/@dn.Id">Изменить</a>
                                                </td>
                                                <td>
                                                    <button type="button" class="btn btn-danger" @onclick="@(async ()=> await DeleteDN(dn.Id))">Удалить</button>
                                                </td>
                                            }
                                            else
                                            {
                                                <td></td>
                                                <td></td>
                                            }
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    [Parameter]
    public Guid FileId { get; set; }

    List<ZAPMainRecordModel> zaps = [];
    private string userRole = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("import", "./scripts.js");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.IsInRole("Admin"))
        {
            userRole = "Admin";
        }
        else
        {
            userRole = "User";
        }

        await LoadData();
    }

    async Task LoadData()
    {
        zaps = await httpClient.GetFromJsonAsync<List<ZAPMainRecordModel>>($"{httpClient.BaseAddress}/Zaps/file/{FileId}") ?? zaps;
    }

    async Task DeleteZap(Guid id)
    {
        await httpClient.DeleteAsync($"{httpClient.BaseAddress}/Zaps/{id}");
        await LoadData();
    }

    async Task DeleteDN(int id)
    {
        await httpClient.DeleteAsync($"{httpClient.BaseAddress}/DispensaryObservations/{id}");
        await LoadData();
    }
}